----23.10.26----
참가자 : 전원

정해야 할 것 : 서버와 클라이언트가 통신하는 타이밍 or 플로우 / 서버의 스레드 분배
서버와 클라이언트의 통신 -> 클라이언트가 동작하는 순서를 알아야 함.

 >>>>서버와 클라이언트가 언제 Send / Recv를 해야하는가?<<<<

클라이언트 - connect이후에 서버에서 기본 정보를 전송할때까지 대기 
 ~ 클라이언트 2개 접속 후 ~
서버 - 각 클라이언트의 역할 (이동/사격)을 SC_PLAYER_ROLE_PACKET으로 전달
        게임을 시작하는데 필요한 패킷 전송 {각 오브젝트 별 SC_CREATE_OBJECT_PACKET 전송
서버 - 이벤트 발생 및 충돌 처리 후 클라이언트에 필요한 데이터 전송
클라이언트 - 키, 마우스 이벤트 발생 시 서버에게 전송

 >>>>서버에서 스레드를 어떻게 분배할것인가?<<<<
 충돌 스레드, 변환행렬 계산 스레드, 이벤트 타이머 스레드
 연산 순서 : 이벤트 -> 변환행렬 -> 충돌

 스레드 분배 : 2명 플레이어당 하나의 스레드를 사용
                  -같은 게임을 플레이하는 유저들은 같은 패킷을 전송 받아야함
                  -연산 순서 진행중에는 다른 연산을 하면 안되므로 스레드를 나눠도 병렬성을 통해 성능 향상을
                    얻기 어려움


 >>>>역할 분배<<<<
의견1 : 서버에서 송수신 하는 부분/ 서버에서 필요한 연산{이벤트 연산, 변환행렬, 충돌 연산} 
/ 클라에서 송수신 하는 부분 

윤수 << 클라이언트 접속, 송수신
동우 << 연산 파트 + 서버에서 오브젝트 관리
동재 << 서버 송수신 + 연산 파트 + 서버에서 오브젝트 관리

----23.10.27----
참가자 : 전원

1. 추진계획서 개요

 게임 요소
  - 장르 : 슈팅게임
  - 컨셉 : 2인 3각
  - 플레이어 수 : 각 세션당 2인

 게임 소개
  - 규칙 : 한 사람이 포탑을, 한 사람이 이동을 담당하여 적 전차를 파괴하고 오래 생존하는것
  - 조작법 : 플레이어 1은 WASD로 이동 플레이어 2는 마우스를 이용해 조준 및 스페이스바로 발사
  - 미사일 : 무작위 위치에 일정 시간마다 떨어짐.

 하이 레벨 디자인
  - 동우가 클라이언트 프레임워크 플로우차트 제작 -> 동재가 서버 통신 구조 추가 -> 윤수가 ppt에 예쁘게 정리해넣기

 로우 레벨 디자인
  - 동재가 덤터기

 일정표
  - 10/31 ~ 12/8

윤수 << 클라이언트 접속, 송수신
동우 << 연산 파트 + 서버에서 오브젝트 관리
동재 << 서버 송수신 + 연산 파트 + 서버에서 오브젝트 관리

10/31 ~ 11/6 1주
 - 윤수 : 클라이언트에 소켓 생성하는 부분, 서버에 connect
 - 동우 : 프로토콜에 다이렉트 구조체 필요한 부분 추가 및 수정 
 - 동재 : 서버 기본 구조(accept, 스레드 등 추가)
11/7 ~ 11/13 2주
 - 윤수 : 클라이언트 접속 후 서버에서 기본 데이터들 전송 받는 부분 제작
 - 동우 : 서버에 오브젝트 클래스 옮기기
 - 동재 : 서버에서 오브젝트 관리할 공간 생성 및 오브젝트 클래스 수정, 접속한 클라이언트에 기본 데이터 전송 기능 구현
11/14 ~ 11/20 3주
 - 윤수 : 클라이언트 게임 하면서 이벤트 발생 시 서버에 데이터 전송하는 기능 구현
 - 동우 : 서버에 이벤트 처리 기능 구현
 - 동재 : 서버에서 이벤트 처리 후 발생한 전송이 필요한 데이터 전송
11/21 ~ 11/27 4주
 - 윤수 : 클라이언트에서 변환 행렬, 충돌 처리 등을 수신 받는 기능 구현
 - 동우 : 서버에 변환행렬 계산, 충돌 처리 기능 추가
 - 동재 : 변환행렬, 충돌 처리 결과 클라이언트에 전송하는 기능 추가
11/28 ~ 12/4 5주
 - 전원 : 미흡한 부분이나 수정이 필요한 부분 보강 및 완성 / 필요하다면 추가 기능 구현
12/5 ~ 12/8 6주
 - 전원 : 플레이 테스트 및 프로젝트 완성
